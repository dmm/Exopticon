[tasks.build-deps]
category = "Build"
command = "cargo"
args = ["build"]

[tasks.build-deps-release]
category = "Build"
command = "cargo"
args = ["build", "--release"]

[tasks.build-workers]
script_runner = "@duckscript"
script = [
'''
cm_run_task cworkers
cm_run_task exopticon
cm_run_task yolov4
cm_run_task frigate
'''
]

[tasks.build]
clear = true
env = { "CARGO_PROFILE" = "debug" }
script_runner = "@duckscript"
script = [
'''
cm_run_task build-deps
cm_run_task build-workers
'''
]

[tasks.build-release]
clear = true
env = { "CARGO_PROFILE" = "release" }
script_runner = "@duckscript"
script = [
'''
cm_run_task build-deps-release
cm_run_task build-workers
'''
]

[tasks.cworkers]
script_runner = "@duckscript"
script = [
'''
exit_on_error true
worker_dir = concat ${CARGO_MAKE_WORKING_DIRECTORY} "/cworkers/"
asset_dir = concat ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY} "/target/assets/workers/cworkers"

exec mkdir -p ${asset_dir}

set_env EXWORKER_BINDIR ${asset_dir}
set_env CARGO_TARGET_DIR ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/target/${CARGO_PROFILE}

cd ${worker_dir}
output = exec make
echo make output ${output.stdout}

'''
]

[tasks.exopticon]
script_runner = "@duckscript"
script = [
'''
exit_on_error true
asset_dir = concat ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY} "/target/assets/workers"

exec cp ${CARGO_MAKE_WORKING_DIRECTORY}/exopticon.py ${asset_dir}
'''
]


[tasks.yolov4_darknet]
script_runner = "@duckscript"
script = [
'''
exit_on_error true
build_dir = concat ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY} "/target/darknet"
asset_dir = concat ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY} "/target/assets/workers/yolov4/data"
echo build dir isss ${build_dir}
mkdir ${build_dir}
cd ${build_dir}
exec cmake ${CARGO_MAKE_WORKING_DIRECTORY}/yolov4/darknet
exec make -j4
exec mkdir -p ${asset_dir}
exec cp ${build_dir}/libdark.so ${asset_dir}

'''
]

[tasks.yolov4]
script_runner = "@duckscript"
script = [
'''
cm_run_task yolov4_darknet

bins = array "darknet.py"
worker_dir = concat ${CARGO_MAKE_WORKING_DIRECTORY} "/yolov4/"
asset_dir = concat ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY} "/target/assets/workers/yolov4/"


exec mkdir -p ${asset_dir}
exec cp -a ${worker_dir}/data/. ${asset_dir}/data/

for b in ${bins}
    exec cp ${worker_dir}/${b} ${asset_dir}
end
'''
]

[tasks.frigate]
script_runner = "@duckscript"
script = [
'''
worker_dir = concat ${CARGO_MAKE_WORKING_DIRECTORY} "/frigate/"
asset_dir = concat ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY} "/target/assets/workers/frigate/"

exec mkdir -p ${asset_dir}/data

exec cp -r ${worker_dir}/frigate/frigate/motion.py ${asset_dir}/data
exec cp -r ${worker_dir}/motion.py ${asset_dir}
'''
]
